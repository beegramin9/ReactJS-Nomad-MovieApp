{"version":3,"sources":["routes/AboutTheProject.js","styles/GlobalComponents/LinkStyle.js","components/Movie/MovieStyle.js","components/Movie/Movie.js","styles/GlobalComponents/SectionStyle.js","styles/GlobalComponents/LoadingStyle.js","routes/Main.js","hooks/useFetchMovieAndMakePagination.js","routes/DetailStyle.js","routes/Detail.js","components/Header/HeaderStyle.js","components/Header/Header.js","components/Footer/FooterStyle.js","components/Footer/Footer.js","styles/GlobalStyle.js","themes/default.js","App.js","index.js"],"names":["About","props","className","StyledLink","styled","Link","MovieCard","div","theme","breakpoints","md","MovieImg","img","MovieDataSet","MovieTitle","MovieGenreList","ul","MovieGenre","li","MovieYear","h3","MovieSummary","p","Movie","id","year","title","summary","poster","genres","to","pathname","state","src","alt","length","slice","map","genre","index","Section","section","grid","row","nopadding","sm","MainCardSection","IntroductionSection","ProfileImageSection","ProfileTextSection","ProfileTextTitle","ProfileTextContent","MovieSection","MovieListSection","PaginationSection","LoadingWrapper","Home","options","axiosInstance","defaultAxios","useState","totalMovieList","setTotalMovieList","pageNumber","setPageNumber","isLoading","setIsLoading","numOfMoviePerPage","setNumOfMoviePerPage","useEffect","a","response","data","movies","fetchMovieData","screenWidth","window","innerWidth","addEventListener","numOfMovieDisplayed","currentMovieList","totalCountOfPage","Math","ceil","changePage","selected","useFetchMovieAndMakePagination","process","size","color","movie","medium_cover_image","previousLabel","nextLabel","pageCount","pageRangeDisplayed","marginPagesDisplayed","breakLabel","onPageChange","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","DetailCard","DetailImg","DetailDataSet","DetailTitle","DetailGenreList","DetailGenre","DetailYear","DetailSummary","DetailButtonSection","DetailButton","button","Detail","this","location","history","console","log","push","onClick","goBack","React","Component","withRouter","HeaderContainer","Div1","Div2","Span","span","Header","style","display","alignItems","marginBottom","FooterWrapper","SocialIcons","Footer","href","GlobalStyle","createGlobalStyle","fonts","main","colors","primary1","background1","accent1","background2","lg","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.118564a6.chunk.js","sourcesContent":["import \"./About.css\"\r\n\r\nfunction About(props) {\r\n    return (\r\n        <div className=\"about__container\">\r\n            <div className=\"about__card\">\r\n                <span>\r\n                    {'\\u00A0'}\"This is a movie archive website which, in ther first place, was a free React tutorial offerered by Nomad Coder.\r\n                    Though, I have made a great improve and turned this to an abosolute gem with responsive layout with grid, flexbox and use of React Styled Component.\r\n                    Also, it follows React folder & file structure conventions which, in another aspect, have improved the scalability and sustainabilty of this gem.\"\r\n                </span>\r\n                <span>\"Anyway, this is just awesome! please enjoy!\"</span>\r\n                <span>- Project Completed, 14 - 07 - 2021</span>\r\n                <span>{'\\u00A0'}{'\\u00A0'}Wontae Choi</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import styled from \"styled-components\"\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const StyledLink = styled(Link)`\r\n    text-decoration: none;\r\n    color: inherit; // 지려버림\r\n    width: auto;\r\n    &:focus, &:hover, &:visited, &:link, &:active {\r\n        text-decoration: none;\r\n    }\r\n    &:active {\r\n        background-color: rgba(34, 34, 34, .7);\r\n        transform: scale(1.05);\r\n        cursor: pointer;\r\n    }\r\n\r\n`","import styled from \"styled-components\"\r\n\r\nexport const MovieCard = styled.div`\r\n    display: grid;\r\n    grid-gap: 1em;\r\n    grid-template-columns: 2fr 5fr;\r\n    background-color: rgb(247 ,247 ,232);\r\n    margin-bottom: 1em;\r\n    padding-left: 1em;\r\n    height: 22em;\r\n    border-radius: 5px;\r\n    box-shadow: 0 8px 10px rgba(0, 0, 0, 0.85), 0 1px 3px rgba(0, 0, 0, 80);\r\n\r\n    @media ${(props) => props.theme.breakpoints.md} {\r\n        width: 80%;\r\n        margin: 0 auto;\r\n    }\r\n\r\n`\r\n\r\nexport const MovieImg = styled.img`\r\n    /* img 태그니까 여기에 display를 걸어도 안 먹히는 것 */\r\n    grid-column: 1 / 2;\r\n    position: relative;\r\n    top: -2em;\r\n    width: 100%;\r\n    border-radius: 5px;\r\n    box-shadow: 0 8px 10px rgba(0, 0, 0, 0.55), 0 1px 3px rgba(0, 0, 0, .55);\r\n`\r\n\r\nexport const MovieDataSet = styled.div`\r\n    /* 위에서 패딩을 주지 말고 여기서 패딩을 주자 */\r\n    grid-column: 2 / 3;\r\n    display: flex;\r\n    margin: 0;\r\n    padding: 0;\r\n    flex-direction: column;\r\n    align-content: flex-start;\r\n    justify-content: flex-start;\r\n    overflow: hidden;\r\n`\r\n\r\nexport const MovieTitle = styled.div`\r\n    flex: 3.5;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    font-size: 1.5em;\r\n    font-weight: bold;\r\n    min-height: 3em;\r\n    padding: 0;\r\n    margin: 0;\r\n`\r\n\r\nexport const MovieGenreList = styled.ul`\r\n    flex: 1.5;\r\n    list-style: none;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: flex-start;\r\n    margin:0;\r\n    padding:0;\r\n    overflow: hidden;\r\n`\r\n\r\nexport const MovieGenre = styled.li`\r\n    margin-right: .5em;\r\n`\r\n\r\nexport const MovieYear = styled.h3`\r\n    flex: 1;\r\n    font-weight: bold;\r\n`\r\n\r\nexport const MovieSummary = styled.p`\r\n    flex: 4;\r\n    padding-right: .5em;\r\n`","/* 개별 movie를 render하는 파일 */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { StyledLink } from \"../../styles/GlobalComponents/LinkStyle\";\r\nimport { MovieCard, MovieImg, MovieDataSet, MovieTitle, \r\n    MovieGenreList, MovieGenre, MovieYear, MovieSummary } from './MovieStyle';\r\n\r\nfunction Movie({id, year, title, summary, poster, genres}) {\r\n    return (\r\n        /* 전체를 Link로 감아서 각 movie의 디테일로 갈 수 있도록 */\r\n    <StyledLink to={ {pathname:`./movie/${id}`,\r\n                    /* props를 준거야, object처럼 생겼잖아 */\r\n                    state: {year, title, summary, poster, genres} /* ES6 */\r\n        }}>  \r\n        <MovieCard>\r\n            <MovieImg src={poster} alt={title} title={title}/>\r\n            <MovieDataSet>\r\n                <MovieTitle>{title.length > 30 ? title.slice(0, 30) + '...' : title}</MovieTitle>\r\n                <MovieGenreList>\r\n                {genres.map ( (genre, index) => (\r\n                    <MovieGenre key={index}>{genre}</MovieGenre>\r\n                ))}\r\n                </MovieGenreList>\r\n                <MovieYear>{year}</MovieYear>\r\n                {/* 삼항연산자 로직...? */}\r\n                <MovieSummary>{summary.length > 100 ? summary.slice(0, 100) + '...' : summary}</MovieSummary>\r\n            </MovieDataSet>\r\n        </MovieCard>\r\n    </StyledLink>   \r\n    )\r\n}\r\n\r\n/* React 컴포넌트의 propTypes 속성 \r\n어짜피 App.js에서 클래스로 들어가잖아*/\r\nMovie.propTypes = {\r\n    id : PropTypes.number.isRequired,\r\n    year : PropTypes.number.isRequired,\r\n    title : PropTypes.string.isRequired,\r\n    summary : PropTypes.string.isRequired,\r\n    /* 이미지도 다 바이너리 문자열로 가져오니까 */\r\n    poster : PropTypes.string.isRequired,\r\n    /* array의 string 요소 */\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movie","import styled from 'styled-components'\r\n\r\nexport const Section = styled.section`\r\n    display: ${(props) => props.grid? \"grid\":\"flex\"};\r\n    flex-direction: ${(props) => props.row? \"row\": \"column\"};\r\n    padding: ${(props) => props.nopadding? \"0\" : \"2rem 3rem 0\"};\r\n    justify-content: center;\r\n    margin: 0 auto;\r\n    max-width: 1200px;\r\n    grid-gap: 5em;\r\n    @media ${(props) => props.theme.breakpoints.sm} {\r\n        padding: 2rem 0 0;\r\n    }\r\n`\r\n\r\nexport const MainCardSection = styled.section`\r\n    display: flex;\r\n    grid-gap: 1em;\r\n    background-color: rgba(84, 86, 90, .45);\r\n    padding: 2em;\r\n\r\n    margin: 0 auto 1em;\r\n    border-radius: 15px;\r\n    box-shadow: 0 13px 27px -5px rgba(0, 0, 0, 0.65),\r\n    0 8px 16px -8px rgba(0, 0, 0, 0.6), 0 -6px 16px -6px rgba(0, 0, 0, .625);\r\n    @media ${(props) => props.theme.breakpoints.sm} {\r\n        flex-direction: column;\r\n        align-content: content;\r\n        width: 25rem;\r\n        padding: 0 2px;\r\n    }\r\n   \r\n`\r\nexport const IntroductionSection = styled.section`\r\n    flex: 30%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    color: rgb(247 ,247 ,232);\r\n    border-right: 2px solid rgba(247 ,247 ,232, .6);\r\n    padding: 1em;\r\n    @media ${(props) => props.theme.breakpoints.sm} {\r\n        display: flex;\r\n        flex-direction: row;\r\n        border-right: 0px;\r\n        border-bottom: 2px solid rgba(247 ,247 ,232, .6);\r\n        gap: 1rem;\r\n    }\r\n`\r\n\r\nexport const ProfileImageSection = styled.div`\r\n    flex: 3.5;\r\n    text-align: center;\r\n    @media ${(props) => props.theme.breakpoints.sm} {\r\n        flex: 1;\r\n    }\r\n`\r\nexport const ProfileTextSection= styled.div`\r\n    flex: 6.5;\r\n    display: flex;\r\n    flex-direction: column;\r\n    @media ${(props) => props.theme.breakpoints.sm} {\r\n        flex: 2;\r\n    }\r\n`\r\nexport const ProfileTextTitle= styled.div`\r\n    flex: 3;\r\n    text-align: center;\r\n    font-size: 3em;\r\n    font-weight: bold;\r\n`\r\nexport const ProfileTextContent= styled.div`\r\n    flex: 7;\r\n    margin-top: 1em;\r\n    font-size: 1.5em;\r\n    @media ${(props) => props.theme.breakpoints.sm} {\r\n        display: none;\r\n    }\r\n`\r\n\r\nexport const MovieSection = styled.section`\r\n    position: relative;\r\n    flex: 70%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-content: center;\r\n    padding: 1em;\r\n    @media ${(props) => props.theme.breakpoints.sm} {\r\n        position: static;\r\n        display: flex;\r\n        align-content: center;\r\n        justify-content: center;\r\n        grid-gap: .3em;\r\n    }\r\n`\r\n\r\nexport const MovieListSection = styled.section`\r\n    flex: 95%;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 5em;\r\n\r\n    /* responsive 시작! */\r\n    @media ${(props) => props.theme.breakpoints.md} {\r\n        display: flex;\r\n        flex-direction: column;\r\n        margin: auto;\r\n    }\r\n    @media ${(props) => props.theme.breakpoints.sm} {\r\n        padding-top: .5rem;\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: center;\r\n    }\r\n`\r\n\r\n\r\nexport const PaginationSection = styled.section`\r\n    flex: 5%;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    padding-top: 2em;\r\n\r\n    @media ${(props) => props.theme.breakpoints.md} {\r\n        padding: 2em 2rem 0 0;\r\n    }\r\n    @media ${(props) => props.theme.breakpoints.sm} {\r\n        padding: 2em 3rem 0 0;\r\n        display: flex;\r\n        justify-content: center;\r\n    }\r\n`","import styled from 'styled-components'\r\n\r\nexport const LoadingWrapper = styled.div`\r\n    /* MovieCardSection에서 */\r\n    flex: 7;\r\n    display: grid;\r\n    min-width: 40em;\r\n    min-height: 58.5em;\r\n    justify-content: center;\r\n    align-content: center;\r\n    @media ${(props) => props.theme.breakpoints.sm} {\r\n        display: flex;\r\n        flex-direction: row;\r\n        min-height: 30em;\r\n        justify-content: center;\r\n        align-self: center;\r\n    }\r\n`","/* 라우팅: 메인 페이지를 보여주는 파일 */\r\nimport React from \"react\";\r\nimport './Main.css';\r\nimport Movie from '../components/Movie/Movie';\r\nimport { useFetchMovieAndMakePagination } from \"../hooks/useFetchMovieAndMakePagination\";\r\nimport { Section, MainCardSection, \r\n  IntroductionSection, ProfileImageSection, ProfileTextSection, ProfileTextTitle, ProfileTextContent,\r\n  MovieSection,  MovieListSection, PaginationSection } from \"../styles/GlobalComponents/SectionStyle\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport '../styles/GlobalComponents/PaginationStyle.css';\r\nimport { BounceLoader } from 'react-spinners';\r\nimport { LoadingWrapper } from '../styles/GlobalComponents/LoadingStyle';\r\n\r\n\r\nfunction Home() {\r\n  const URL = \"https://yts.mx/api/v2/list_movies.json?sort_by=rating\"\r\n  const  {isLoading, currentMovieList, totalCountOfPage, changePage} = useFetchMovieAndMakePagination(URL)\r\n\r\n\r\n  // loading도 받아와서 loading일때는 부트스트랩 로딩 아이콘을 가져와서 쓸 수 있도록 해보자\r\n\r\n  return (\r\n    \r\n\r\n      <Section grid row>\r\n        <MainCardSection>\r\n          <IntroductionSection>\r\n            <ProfileImageSection>\r\n              <img className=\"profile-picture\" src={process.env.PUBLIC_URL + '/images/profile.jpg'} alt=\"picture of Wontae smiling\"/>\r\n            </ProfileImageSection> \r\n            <ProfileTextSection>\r\n              <ProfileTextTitle>Wontae's Movie Archive</ProfileTextTitle>\r\n              <ProfileTextContent>{'\\u00A0'}\r\n                                  Films are made to make us think, feel, laugh and cry.\r\n                                  Films take us to places where we cannot go and let us experience the things we cannot do in real life. </ProfileTextContent>\r\n            </ProfileTextSection>\r\n          </IntroductionSection>\r\n          {isLoading ?\r\n              <MovieSection>\r\n                <LoadingWrapper>\r\n                  <BounceLoader size={48} color='rgb(247, 247, 232)'/>\r\n                </LoadingWrapper>\r\n              </MovieSection>\r\n              :\r\n          <MovieSection>\r\n            <MovieListSection>\r\n              {currentMovieList.map(movie => {\r\n                return <Movie \r\n                key={movie.id} \r\n                id={movie.id} \r\n                year={movie.year} \r\n                title={movie.title} \r\n                summary={movie.summary} \r\n                genres={movie.genres} \r\n                poster={movie.medium_cover_image} />\r\n              })}\r\n            </MovieListSection>\r\n            <PaginationSection>\r\n              <ReactPaginate \r\n              previousLabel={\"<<\"}  \r\n              nextLabel={\">>\"}\r\n              pageCount={totalCountOfPage}\r\n              pageRangeDisplayed={2} /* 선택된 페이지 양옆 총 2개, 즉 각 1개씩 */\r\n              marginPagesDisplayed={1} /* 양끝 1개씩, 즉 최초와 최후는 항상 보이게 */\r\n              breakLabel={'-'} \r\n              onPageChange={changePage}\r\n              containerClassName={\"paginationButton\"}\r\n              previousLinkClassName={\"previousButton\"}\r\n              nextLinkClassName={\"nextButton\"}\r\n              disabledClassName={\"paginationDiabled\"}\r\n              activeClassName={\"paginationActive\"}/>\r\n            </PaginationSection>\r\n          </MovieSection>\r\n          } \r\n        </MainCardSection>\r\n      </Section>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n// class Home extends React.Component {\r\n//   state = {\r\n//     /* App이 실행(Mount)됨을 알리기 위해 isLoading이란 변수 */\r\n//     isLoading : true,\r\n//     /* 근데 state에 추가하지 않고 나중에 setState에서 추가해도 오류나지 않는다. */\r\n//     movies: []\r\n//   }\r\n//   /* 맨 처음 호출될 때\r\n//   render와 lifecylce은 다른 메소드니까 render 밖에 작성해야 함 */\r\n//   /* 함수 이런식으로 쓰는것도 ES6 */\r\n// \r\n//   /* 비동기. wait for axios! ES6라고 하는데 nodeJS랑 똑같네\r\n//   await 쓰려면 함수 앞에 async 써야 함 */\r\n//   getMovies = async () => {\r\n//     const URL = \"https://yts.mx/api/v2/list_movies.json?sort_by=rating \"\r\n//     // const movies = await axios.get(URL)\r\n//     // console.log(movies.data.data.movies);\r\n//     /* 원래 데이터 형태\r\n//     movies = {\r\n//       data: {data: {movies: {'const에 들어갈 원하는 정보'} } }\r\n//     } */\r\n// \r\n// \r\n//     const {data: {data: { movies }}} = await axios.get(URL)\r\n//     /* 원래는 {data: {data: { movies }}} = movies 인 거야\r\n//     원래는 movies : movies 인데 같으니까 movies으로만 써도 되는 것\r\n//      */\r\n//     console.log(movies);\r\n//     /* movies 안의 movie들을 state 안의 movie array에 넣을 것 */\r\n//     this.setState({movies : movies, isLoading : false})\r\n//     /* 앞에껀 state에 있는 movies array, 뒤에껀 url로 받아온 것 */\r\n//     /* {} 껍질 벗길 수 있다그랬지? 게다가 여긴 변수이름도 똑같으니 \r\n//     this.setState({{movies}}) 로 사용가능\r\n//     */\r\n//     console.log(this.state.movies);\r\n// \r\n//   }\r\n//   componentDidMount() {\r\n//     /* render가 처음 실행될 때 data를 fetch함. 보통 fetch()를 사용하긴 하는데\r\n//     axios() 사용할거임\r\n//     data 가져오는게 완료됐으면 그 데이터를 render할 거임 */\r\n//     this.getMovies()\r\n//   }\r\n// \r\n// \r\n//   render () {\r\n//     const {isLoading, movies} = this.state\r\n//     /* return 안의 괄호 안 코드는 JS 코드라 그랬지?\r\n//     근데 this.state 계속 써야하나? 귀찮노 */\r\n//     /* object 해체하는 방법임\r\n//     아마 state에 isLoading 하나밖에 없기 때문에 가능한 것으로 보임 \r\n//     변수를 설정하려면 당연히 return 밖에서 해야겠지 */\r\n// \r\n// \r\n//     /* html의 class와 JS의 class가 겹치기 때문에 className \r\n//     html의 for(label)과 JS의 for(반복문)이 겹치기 때문에 htmlfor*/\r\n//     return (\r\n//       <Section>\r\n// \r\n//       <section className=\"container\">\r\n//         {isLoading ? \r\n//         <div className=\"loader\">\r\n//           <span className=\"loader__txt\">Loading...</span>\r\n//         </div>:\r\n// \r\n// <div className=\"movies\">\r\n//           {movies.map(movie => {\r\n//             return <Movie \r\n//             /* key 요소가 있어야 한대 */\r\n//             key={movie.id} \r\n//             id={movie.id} \r\n//             year={movie.year} \r\n//             title={movie.title} \r\n//             summary={movie.summary} \r\n//             genres={movie.genres} \r\n//             poster={movie.medium_cover_image} />\r\n//           })}\r\n//         </div>\r\n//         }\r\n//       </section>\r\n//       </Section>\r\n//     )\r\n//   }  \r\n// }\r\n","import { useEffect, useState } from \"react\";\r\nimport defaultAxios from \"axios\";\r\n\r\nexport const useFetchMovieAndMakePagination = (options, axiosInstance = defaultAxios) => {\r\n    const [totalMovieList, setTotalMovieList] = useState([]);\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    /* 처음으로 다시 돌아올 때 안되는건가 */\r\n    const [numOfMoviePerPage, setNumOfMoviePerPage] = useState(4);\r\n\r\n\r\n    useEffect( ()=>{\r\n        const fetchMovieData = async () => {\r\n            const response = await axiosInstance(options)\r\n            const {data: {data: {movies : totalMovieList}}}= response\r\n            setTotalMovieList(totalMovieList)\r\n            setIsLoading(false);\r\n        }\r\n        fetchMovieData();\r\n    }, []);\r\n\r\n\r\n    /* numOfMoviePerPage도 state니까, 매번 변하게 하려면 useState를 사용해야 함 */\r\n    /* 맨 첨부터 실행될때는 잘 안되네,, 결국 useEffect를 써야하나 */\r\n    useEffect( () => {\r\n        /* 이렇게하면 맨 처음일때, 즉 resize가 일어나지 않았을 때에는 \r\n        screenWidth에 관계없이 항상 기본값 4가 되고, resize가 일어났을 때 비로소 이렇게 된다\r\n        즉, eventListner 뿐만 아니라 맨 처음 상태에도 더해줘야 한다. */\r\n        const screenWidth  = window.innerWidth;\r\n        if (screenWidth < 730) {\r\n            setNumOfMoviePerPage(1);\r\n        } else if (screenWidth < 960) {\r\n            setNumOfMoviePerPage(2);\r\n        } else {\r\n            setNumOfMoviePerPage(4);\r\n        }\r\n        window.addEventListener('resize', () => {\r\n            const screenWidth  = window.innerWidth;\r\n            if (screenWidth < 730) {\r\n                setNumOfMoviePerPage(1);\r\n            } else if (screenWidth < 960) {\r\n                setNumOfMoviePerPage(2);\r\n            } else {\r\n                setNumOfMoviePerPage(4);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n\r\n    const numOfMovieDisplayed = pageNumber * numOfMoviePerPage\r\n    const currentMovieList = totalMovieList.slice(numOfMovieDisplayed, numOfMovieDisplayed+numOfMoviePerPage)\r\n    const totalCountOfPage = Math.ceil(totalMovieList.length / numOfMoviePerPage)\r\n\r\n    const changePage = ({selected}) => {\r\n        // ReactPaginate has a prop named Selected\r\n        setPageNumber(selected)\r\n    }\r\n\r\n    return {isLoading, currentMovieList, totalCountOfPage, changePage}\r\n} ","import styled from \"styled-components\"\r\n\r\n\r\nexport const DetailCard = styled.div`\r\n    display: grid;\r\n    grid-gap: 1em;\r\n    grid-template-columns: 3fr 4fr;\r\n    background-color: rgb(247 ,247 ,232);\r\n    margin-bottom: 1em;\r\n    padding: 0 1em;\r\n    width: 100%;\r\n    height: 58.5em;\r\n    border-radius: 5px;\r\n    box-shadow: 0 8px 10px rgba(0, 0, 0, 0.85), 0 1px 3px rgba(0, 0, 0, 80);\r\n    @media ${(props) => props.theme.breakpoints.sm} {\r\n        width: 95%;\r\n        height: 51em;\r\n    }\r\n`\r\n\r\nexport const DetailImg = styled.img`\r\n    /* img 태그니까 여기에 display를 걸어도 안 먹히는 것 */\r\n    width: 100%;\r\n    border-radius: 5px;\r\n    box-shadow: 0 8px 10px rgba(0, 0, 0, 0.55), 0 1px 3px rgba(0, 0, 0, .55);\r\n`\r\n\r\nexport const DetailDataSet = styled.div`\r\n    position: relative;\r\n    /* 위에서 패딩을 주지 말고 여기서 패딩을 주자 */\r\n    display: flex;\r\n    margin: 0;\r\n    padding: 0;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-content: flex-start;\r\n    overflow: auto;\r\n\r\n    &::-webkit-scrollbar {\r\n        margin-right: -10px;\r\n        width: 10px;\r\n        background-color: transparent;\r\n    }\r\n\r\n    &::-webkit-scrollbar-thumb {\r\n        background-color:  rgba(34, 34, 34, .4);\r\n        border: 2px solid rgba(34, 34, 34, .6);\r\n        border-radius: 5px;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        background-color: rgba(255, 255, 255, 0.4);\r\n        border-radius: 5px;\r\n    }\r\n`\r\n\r\n\r\n\r\n\r\nexport const DetailTitle = styled.div`\r\n    flex: 3;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    font-size: 3em;\r\n    font-weight: bold;\r\n    padding: 0;\r\n    margin: 0;\r\n`\r\n\r\nexport const DetailGenreList = styled.ul`\r\n    flex: 1;\r\n    list-style: none;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: flex-start;\r\n    margin:0;\r\n    padding:0;\r\n    overflow: hidden;\r\n`\r\n\r\nexport const DetailGenre = styled.li`\r\n    margin-right: 1em;\r\n    font-size: 1.5em;\r\n\r\n`\r\n\r\nexport const DetailYear = styled.h3`\r\n    flex: 1;\r\n    font-weight: bold;\r\n    font-size: 2em;\r\n`\r\n\r\nexport const DetailSummary = styled.p`\r\n    flex: 4;\r\n    padding-right: .5em;\r\n    font-size: 1.5em;\r\n    \r\n`\r\nexport const DetailButtonSection = styled.div`\r\n    margin-top: .5em;\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: flex-end;\r\n    margin: 0;\r\n    padding: 0;\r\n`\r\n\r\nexport const DetailButton = styled.button`\r\n    /* 버튼, 인풋 기본모양이 싫다면 초기화하는 기능 */\r\n    all: unset;\r\n    cursor: pointer;\r\n    background-color: rgba(34, 34, 34, .7);\r\n    /* 패딩 갑옷 생각하면 됨. 안으로 들어가잖아? */\r\n    margin:0;\r\n    padding: 5px 0px;\r\n    width: 80px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n    /* 경계선 */\r\n    box-shadow: 0 8px 10px rgba(0, 0, 0, 0.85), 0 1px 3px rgba(0, 0, 0, 80);\r\n\r\n    border: 2px solid rgba(0, 0, 0, 0.2);\r\n    /* rgba의 a는 투명도 */\r\n    color: rgba(0, 0, 0, 0.7);\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    font-size: 1em;\r\n    min-height: 2em;\r\n\r\n    &:hover {\r\n        background-color:  rgb(247 ,247 ,232);\r\n        transform: scale(0.95);\r\n        cursor: pointer;\r\n    }\r\n    &:active {\r\n        text-decoration: none;\r\n    }\r\n`","import React from \"react\"\r\nimport {withRouter} from \"react-router-dom\";\r\nimport { Section, MainCardSection, \r\n    IntroductionSection, ProfileImageSection, ProfileTextSection, ProfileTextTitle, ProfileTextContent,\r\n    MovieSection } from \"../styles/GlobalComponents/SectionStyle\";\r\n\r\n\r\nimport { DetailCard, DetailImg, DetailDataSet, DetailTitle, \r\n        DetailGenreList, DetailGenre, DetailYear, DetailSummary, DetailButtonSection, DetailButton } from './DetailStyle';\r\n\r\nimport { StyledLink } from \"../styles/GlobalComponents/LinkStyle\";\r\n/* 기본페이지처럼 카드섹션을 만든 다음. 그 다움에\r\n안에서 이미지도 더 키우고, 텍스트도 많이 나오게 하면 되겠다 */\r\n\r\nclass Detail extends React.Component {\r\n    componentDidMount() {\r\n        const {location : {state}, history} = this.props\r\n        console.log(this.props);\r\n        console.log('history',history);\r\n        /* Movies 컴포넌트에서 받아온 props\r\n        Detail 컴포넌트가 가지고 있는 속성으로 됨 */\r\n        if (!state) {\r\n            /* Movie 카드에서 들어온게 아니라면 Movie 카드 홈페이지로 되돌림\r\n            this.props에 있는 history의 push() 를 이용함. redirect 기능 */\r\n            history.push('/Home')\r\n        }\r\n    }\r\n    /* 렌더링이 되고 나서 componentDidMount()가 실행된다. \r\n    그래서 title을 받아온 다음에 새로고침을 하면 에러가 발생함\r\n    props를 안 받와왔으니 location도 없기 때문이다 */\r\n\r\n    /* 뒤로가기 버튼을 만들어라 */\r\n    \r\n    render() {\r\n        const {location} = this.props\r\n        /* 그래서 여기서 경우를 나눠줘야 함 */\r\n        if (location.state) {\r\n            return (\r\n                <Section grid row>\r\n                    <MainCardSection>\r\n                        { window.innerWidth > 730 ?\r\n                        <IntroductionSection>\r\n                            <ProfileImageSection>\r\n                            <img className=\"profile-picture\" src={process.env.PUBLIC_URL + '/images/profile.jpg'} alt=\"picture of Wontae smiling\"/>\r\n                            </ProfileImageSection> \r\n                            <ProfileTextSection>\r\n                            <ProfileTextTitle>Wontae's Movie Archive</ProfileTextTitle>\r\n                            <ProfileTextContent>{'\\u00A0'} Films in my opinion are made to entertain us. \r\n                                                But, that is not just their sole purpose. \r\n                                                They are made to make us think, feel, laugh and cry.\r\n                                                They take us to places where we cannot go and let us experience the things we cannot do in real life. </ProfileTextContent>\r\n                            </ProfileTextSection>\r\n                        </IntroductionSection> :\r\n                        \"\"\r\n                        }\r\n                        <MovieSection>\r\n                            <DetailCard>\r\n                                <DetailImg src={location.state.poster}/> \r\n                                <DetailDataSet>\r\n                                    <DetailTitle>\r\n                                        {location.state.title}\r\n                                    </DetailTitle>\r\n                                    <DetailGenreList>\r\n                                        {location.state.genres.map ( (genre, index) => (\r\n                                            <DetailGenre key={index}>{genre}</DetailGenre>\r\n                                        ))}\r\n                                    </DetailGenreList>\r\n                                    <DetailYear>\r\n                                        {location.state.year}\r\n                                    </DetailYear>\r\n                                    <DetailSummary>\r\n                                        {location.state.summary}\r\n                                    </DetailSummary>\r\n                                </DetailDataSet>\r\n                            </DetailCard>\r\n                            <DetailButtonSection>\r\n                                <DetailButton onClick={ () => this.props.history.goBack()  }>Back</DetailButton>\r\n                            </DetailButtonSection>\r\n                        </MovieSection>\r\n                    </MainCardSection>\r\n                </Section>\r\n            )\r\n        } else {\r\n            return null;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(Detail);","import styled from \"styled-components\"\r\n\r\nexport const HeaderContainer = styled.div`\r\n    display: flex;\r\n    padding: 2rem 1rem 1rem;\r\n    width: 95%;\r\n    height: 2.5rem;\r\n    \r\n    justify-content: space-between;\r\n    align-content: center;\r\n    \r\n    color: rgb(247 ,247 ,232);\r\n\r\n\r\n    font-family: 'NEXONFootballGothicLA1';\r\n\r\n    @font-face {\r\n    font-family: \"NEXONFootballGothicLA1\";\r\n    src: url(\"https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_20-04@2.1/NEXONFootballGothicLA1.woff\")\r\n        format(\"woff\");\r\n    font-weight: normal;\r\n    font-style: normal;\r\n    }\r\n    @media ${(props) => props.theme.breakpoints.sm} {\r\n    }\r\n`\r\n\r\nexport const Div1 = styled.div`\r\n    flex: 8;\r\n    display: flex;\r\n    padding: 0 1em;\r\n    font-size: 2em;\r\n`\r\nexport const Div2 = styled.div`\r\n    flex: 1;\r\n    display: flex;\r\n    font-size: 1.5em;\r\n    justify-content: space-between;\r\n    position: relative;\r\n    top: .25em;\r\n    gap: 1em;\r\n`\r\n\r\nexport const Span = styled.span`\r\n    padding-left: .2em;\r\n`","import React from \"react\";\r\nimport { HeaderContainer, Div1, Div2, Span} from \"./HeaderStyle\";\r\nimport { StyledLink } from \"../../styles/GlobalComponents/LinkStyle\";\r\nimport { RiMovie2Fill } from 'react-icons/ri';\r\n\r\n// 세로에 넣자\r\nfunction Header() {\r\n    /* Navigation을 만들기 위해 html의 <a>을 사용하면, <a>는 새로고침으로 새 페이지로 \r\n    이동하기 떄문에 이동할 때마다 React가 죽는다. 그렇기에 React의 Link를 사용한다 */\r\n    return (\r\n        <HeaderContainer>\r\n            <Div1>\r\n                <StyledLink to=\"/Home\">\r\n                    <a style={{ display: \"flex\", alignItems: \"center\", color:'white', marginBottom:\"20px\"}}>\r\n                        <RiMovie2Fill size=\"2rem\"/>\r\n                    </a>\r\n                </StyledLink>\r\n                <Span>MovieChive</Span>\r\n            </Div1>\r\n            <Div2>\r\n                <StyledLink to=\"/About\">\r\n                    <Span>About</Span>\r\n                </StyledLink>\r\n                <StyledLink to=\"/Home\">\r\n                    <Span>Home</Span>\r\n                </StyledLink>\r\n            </Div2>\r\n            {/* React 라우터에 의해 주어진 props를 이용해서\r\n            각각 Movie 카드를 클릭하면 Movie 디테일을 들고 다른 페이지로 갈 수 있도록 */}\r\n            {/* to의 path를 object로 교체할 수 있다. 주로 state에 추가 정보를 보낼 때 사용한다.\r\n            다시 말하면, jQuery로 /about&id=1?bid=2019처럼 정보가 보이지 않고 숨겨서 보낼 수 있다.*/}\r\n            {/* <StyledLink to={{\r\n                pathname: \"/movie\",\r\n                state: {\r\n                    fromNavigation : true\r\n                }\r\n            }}></StyledLink> */}\r\n        </HeaderContainer>\r\n        )\r\n\r\n    /* Link 태그가 들어간 컴포넌트는 HashRouter 밖에서 사용할 수 없다.\r\n    즉, Navigation 링크가 HashRouter 링크 밖으로 나가버리면 사용 불가능 */\r\n}\r\n\r\nexport default Header","import styled from 'styled-components'\r\n\r\nexport const FooterWrapper = styled.section`\r\n    display: flex;\r\n    justify-content: center;\r\n\twidth: 90%;\r\n    padding: 0 48px 40px;\r\n    margin: 1rem auto 1rem;\r\n    box-sizing: content-box;\r\n    @media ${props => props.theme.breakpoints.sm} {\r\n        padding: 0 16px 48px;\r\n    }\r\n  \r\n`\r\n\r\nexport const SocialIcons = styled.a`\r\n    transition: 0.3s ease;\r\n    color: white;\r\n    border-radius: 50px;\r\n    padding: 8px;\r\n    &:hover {\r\n        background-color: rgba(34, 34, 34, .7);\r\n        transform: scale(1.2);\r\n        cursor: pointer;\r\n    }\r\n`","import React from \"react\";\r\nimport { } from \"./FooterStyle\";\r\nimport { StyledLink } from \"../../styles/GlobalComponents/LinkStyle\";\r\nimport { AiFillGithub, AiFillInstagram, AiFillLinkedin } from 'react-icons/ai';\r\nimport { FooterWrapper, SocialIcons } from \"./FooterStyle\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <FooterWrapper>\r\n            <SocialIcons href=\"https://github.com/beegramin9/ReactJS-Nomad-MovieApp\">\r\n                <AiFillGithub size=\"2rem\"/>\r\n            </SocialIcons>\r\n            <SocialIcons href=\"https://linkedin.com/in/wontae-choi-917259209\">\r\n              <AiFillLinkedin size=\"2rem\"/>\r\n            </SocialIcons>\r\n            <SocialIcons href=\"https://instagram.com/beestron9\">\r\n              <AiFillInstagram size=\"2rem\"/>\r\n            </SocialIcons>\r\n        </FooterWrapper>\r\n    )\r\n}\r\n\r\nexport default Footer;","import { createGlobalStyle } from \"styled-components\";\r\n\r\n/* Component가 아닌 애들의 스타일 */\r\nexport const GlobalStyle = createGlobalStyle`\r\n\r\n\r\n    body {\r\n    padding: 0;\r\n    margin: 0;\r\n    background: linear-gradient(\r\n        to right,\r\n        rgba(20, 20, 20, 0.1) 20%,\r\n        rgba(20, 20, 20, 0.7) 60%,\r\n        rgba(20, 20, 20, 1)\r\n    ),url(https://source.unsplash.com/random/1920x1080);\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-position: 0px;\r\n    width: 100%;\r\n    \r\n    color: #2c2c2c;\r\n    font-size: 12px;\r\n    font-family: 'Noto Sans KR', -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\r\n    Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif;\r\n    }\r\n`","const theme = {\r\n    // Temp fonts\r\n    fonts: {\r\n      title: \"Space Grotesk, sans-serif\",\r\n      main: \"Space Grotesk, sans-serif\"\r\n    },\r\n    // Colors for layout\r\n    colors: {\r\n      primary1: \"hsl(204,23.8%,95.9%)\",\r\n      background1: \"#0F1624\",\r\n      accent1: \"hsl(34.9,98.6%,72.9%)\",\r\n      button: \"hsl(205.1,100%,36.1%)\",\r\n      background2: \"hsl(232.7,27.3%,23.7%)\",\r\n    },\r\n    // Breakpoints for responsive design\r\n    breakpoints: {\r\n      sm: 'screen and (max-width: 730px)',\r\n      md: 'screen and (max-width: 960px)',\r\n      lg: 'screen and (max-width: 1024px)'\r\n    },\r\n  }\r\n  \r\n  export default theme;","import React from \"react\"\r\n/* react-router-dom는 react에서 router 만들기 딱 좋음\r\n밑에 HashRouter, Route는 컴포넌트로 라우팅 기능을 갖고 있음 */\r\nimport {HashRouter, Route} from \"react-router-dom\";\r\nimport About from \"./routes/AboutTheProject\";\r\nimport Home from \"./routes/Main\";\r\nimport Detail from \"./routes/Detail\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { GlobalStyle } from \"./styles/GlobalStyle\";\r\nimport theme from \"./themes/default\";\r\n\r\nfunction App() {\r\n  /* 라우터를 return에 넣어준다. */\r\n  return (\r\n  <ThemeProvider theme={theme}>\r\n    <HashRouter>\r\n      <GlobalStyle/>\r\n      <Header/> {/* Styled Component로 만들어야 함 */}\r\n      {/* 모든 페이지에 있어야 하는 Navigation, 그니까 App.js에 있어야 함\r\n      Link Component는 HashRouter 안에 있어야 한다. */}\r\n  \r\n      {/* 어떤 url으로 갈지, 어떤 파일의 리액트 컴포넌트를 불러올지 props이 필요함 */}\r\n      {/* 여기서 받은 Detail Component를 Detail.js에서 사용 가능 */}\r\n      <Route path=\"/\" exact={true} component={Home}/>\r\n      <Route path=\"/home\" exact={true} component={Home}/>\r\n      {/* /home과 /home/1이 겹치는걸 막으려면 exact url 아니면 안 띄운다는 뜻의 exact={true} 주면 됨 */}\r\n      <Route path=\"/about\" exact={true} component={About}/>\r\n      <Route path=\"/movie/:id\" exact={true} component={Detail}/>\r\n      <Footer/>\r\n    </HashRouter>\r\n  </ThemeProvider>\r\n)}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n// import 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\n/* import Food from './1_propTypes.js'\r\n하고 ReactDOM.render에 <App>, <Food>를 둘 다 넣으려고 했지만\r\n작동하지 않는다. 왜?\r\nReact app은 하나의 component만을 render할 수 있기 때문이다.\r\n그래서 Food를 App 안에 넣는 것이다.\r\n*/\r\nReactDOM.render(\r\n    <App />, \r\n    /* Component: HTML을 return하는 함수\r\n    App.js를 가서 보면 HTML element들을 return한다.\r\n    즉, React는 component를 사용해서 HTML을 작성하고, \r\n    이러한 JS와 HTML의 조합을 JSX라고 한다.\r\n\r\n    그러면 새로운 component를 어떻게 만들 수 있을까?\r\n    learn_component, props, prop-types.js가 새로운 컴포넌트를 만들었던 과정 \r\n    */\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}